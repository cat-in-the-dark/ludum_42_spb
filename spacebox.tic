-- title:  game title
-- author: game developer
      -- desc:   short description
-- script: lua

T=8

Player = {
  x=0,
  y=0,
  cr={x=0,y=0,w=8,h=16},
  vx=0,
  vy=0,
  rigid=true,
  mass=true,
  sp={{256},{272}}
}

SpikeTex = {
  C=304,
  L=305,
  U=306,
  D=307,
  R=308
}

LeftSpikes = {
  x=0,
  y=0,
  cr={x=0,y=0,w=120,h=136},
  rigid=false,
  mass=false,
  sp={}
}

function drawEnt(e)
  local i=1
  for i,t in ipairs(e.sp) do
    for j,v in ipairs(t) do
      spr(v, e.x+(j-1)*T, e.y+(i-1)*T, 0)
    end
  end
end

function vec2(xV, yV)
  return {x=xV,y=yV}
end

function v2mul(v, s)
  return vec2(v.x*s, v.y*s)
end

function v2div(v,s)
  return vec2(v.x/s, v.y/s)
end

function v2add(v1, v2)
  return vec2(v1.x+v2.x,v1.y+v2.y)
end

function v2len(v)
  return math.ceil(math.sqrt(v.x*v.x + v.y*v.y))
end

function sign(x)
  return x>0 and 1 or x<0 and -1 or 0
end

BTN_UP = 0
BTN_LEFT = 2
BTN_RIGHT = 3

JMP_IMP = 3
ACCEL = 0.2

transparent_sprites_index = 0
solid_sprites_index = 80

function IsTileSolid(x, y)
  return (mget(x, y) >= solid_sprites_index)
end

function collide(e1,e2)
  return (e1.x < e2.x+e2.cr.w and e2.x < e1.x + e1.cr.w) and
    (e1.y < e2.y+e2.cr.h and e2.y < e1.y+e1.cr.h)
end

function handleInput()
  local iv={pos=vec2(0,0), jump=false}
  if btn(BTN_LEFT) then
    iv.pos.x = -1
  elseif btn(BTN_RIGHT) then
    iv.pos.x = 1
  end
  if btn(BTN_UP) then
    iv.jump=true
  end
  return iv
end

function CanMove(dp,cr)
  local x1 = dp.x + cr.x
  local y1 = dp.y + cr.y
  local x2 = x1 + cr.w - 1
  local y2 = y1 + cr.h - 1
  -- check all tiles touched by the rect
  local startC = x1 // T
  local endC = x2 // T
  local startR = y1 // T
  local endR = y2 // T
  -- print(string.format("%d %d %d %d", startC, endC, startR, endR), 0, 0, 4)
  for c = startC, endC do
    for r = startR, endR do
      if IsTileSolid(c, r) then
        return false
      end
    end
  end
  return true
end

function isOnFloor(e)
  return not CanMove(vec2(e.x,e.y+1),e.cr)
end

function isUnderCeiling(e)
  return not CanMove(vec2(e.x,e.y-1),e.cr)
end

function TryMoveBy(e,dp)
  local pos=vec2(e.x, e.y)
  CM = ""
  if (e.rigid) then
    if dp.x ~= 0 then
      for i=dp.x,sign(dp.x),-1*sign(dp.x) do
        if CanMove(vec2(e.x+i,e.y),e.cr) then
          e.x=e.x+i
          break
        end
      end
    end
    if dp.y ~= 0 then
      if CanMove(vec2(e.x,e.y+dp.y),e.cr) then
        e.y=e.y+dp.y
      else
        moveby=0
        for i=0,math.ceil(dp.y),sign(dp.y) do
          if CanMove(vec2(e.x,e.y+i),e.cr) then
            moveby=i
          else
            break
          end
        end
        e.y=e.y+moveby
      end
    end
  else
    e.x=e.x+dp.x
    e.y=e.y+dp.y
  end
end

function update(e)
  local iv=handleInput()
  if (e.mass) then
    if isOnFloor(e) then
      if iv.jump then
        e.vy=-1*JMP_IMP
      else
        e.vy=0
      end
    elseif isUnderCeiling(e) and e.vy < 0 then
      e.vy=0
    else
      e.vy = e.vy + ACCEL
    end
  end
  local dp=v2add(iv.pos,vec2(e.vx, e.vy))
  TryMoveBy(e,dp)
end

function fillSpikeWalls()
  for i=1,(136/T) do
    LeftSpikes.sp[i]={}
    for j=1,(120/T-1) do
      LeftSpikes.sp[i][j]=SpikeTex.C
    end
    LeftSpikes.sp[i][120/T]=SpikeTex.L
  end
end

function init()
  fillSpikeWalls()
  Player.x=130
end

init()
function TIC()
  cls()
  map()
  update(Player)
  print(string.format("%f", Player.y), 0, 0, 4)
  drawEnt(Player)
  drawEnt(LeftSpikes)
  str = ""
  if collide(Player, LeftSpikes) then str=str.."COLL" end
  print(str, 130, 0, 4)
end
